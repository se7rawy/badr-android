
name: build debug apk

on:
  pull_request: { }
  push:
    branches: [ main, develop ]
  workflow_dispatch:
# Enrich gradle.properties for CI/CD
env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx3072m -Dfile.encoding=UTF-8 -XX:+HeapDumpOnOutOfMemoryError -XX:MaxMetaspaceSize=1g" -Dkotlin.daemon.jvm.options="-Xmx2560m" -Dkotlin.incremental=false
  CI_GRADLE_ARG_PROPERTIES: --stacktrace -PpreDexEnable=false --max-workers 2 --no-daemon

jobs:
  debug:
    name: Build debug APKs (${{ matrix.target }})
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          # https://github.com/actions/checkout/issues/881
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
      - name: Use JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'
      - name: Configure gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/develop' }}
      - name: Assemble ${{ matrix.target }} debug apk
        run: ./gradlew assemble${{ matrix.target }}Debug $CI_GRADLE_ARG_PROPERTIES
      - name: Upload ${{ matrix.target }} debug APKs
        uses: actions/upload-artifact@v3
        with:
          name: vector-${{ matrix.target }}-debug
          path: |
            vector-app/build/outputs/apk/*/debug/*.apk

# Send to the APK to Telegram
      - name: Send the APK to Telegram
        env:
          APK_PATH: vector-app/build/outputs/apk/*/debug/*.apk
          BOT_API_KEY: ${{ secrets.BOT_API_KEY }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
        run: |
          curl -F chat_id=$CHAT_ID -F document=@"${APK_PATH}" -F caption="Template-$(date +"%Y%m%d-%H%M")" https://api.telegram.org/bot${BOT_API_KEY}/sendDocument
          
 
